Сам раб 1 базовый(41л)

#include <iostream>
using namespace std;
int main() {
    float a;
    cin >> a ;
    float a2 = a * a;
    float a4 = a2 * a2;
    float a8 = a4 * a4;
    float a16 = a8 * a8;
    float a32 = a16 * a16;
    float a64 = a32 * a32;
    cout << a64;
    return 0;
}



Сам раб 1 базовый(42a)

#include <iostream>
using namespace std;
int main() {
    float a;
    cin >> a;
    float a2= a * a;
    float a3 = a2 * a;
    float a5 = a * a * a * a * a;
    float a10 = a5 * a5;
    cout << a3 << "," << a5;
}


Сам раб 1 базовый(42б)

#include <iostream>
using namespace std;
int main() {
    float a;
    cin >> a;
    float a2 = a * a;
    float a4 = a2 * a2;
    float a5 = a * a * a * a * a;
    float a10 = a5 * a5;
    float a20 = a10 * a10;
    cout << a4 << "," << a20;
    return 0;
}

Сам раб 1 базовый(42в)


#include <iostream>
using namespace std;
int main() {
    float a;
    cin >> a;
    float a2 = a * a;
    float a3 = a2 * a;
    float a4 = a2 * a2;
    float a5 = a4 * a;
    float a13 = a5 * a5 * a3;
    cout << a5 << "," << a13;
    return 0;
}


Сам раб 1 продвинутый(20)


#include <iostream>
#include <cmath>

using namespace std;

int main() {
    double n, p, p1, q, res;
    cout << "Введите количество подводных лодок n: ";
    cin >> n;
    cout << "Введите вероятность попадания торпеды в авианосец p: ";
    cin >> p;
    cout << "Введите вероятность затопления демаскированной подводной лодки кораблями охранения p1: ";
    cin >> p1;

    q = (1 - p) * (1 - p1);
    res = p * (1 - p1) * ((1 - pow(q, n)) / (1 - q));

    cout << "Вероятность затопления авианосца и ухода подводных лодок без потерь равна: " << res << endl;

    return 0;
}


сам раб 2(if24)

#include <iostream>
#include <cmath>
using namespace std;
double func(double x){
    if (x > 0) {
        return 2 - sin(x);
    } else {
        return 6 - x;
    }
}
int main() {
    double x = 2.5;
    cin >> x; 
    double result = func(x); 
    cout << "f(" << x << ") = " << result << endl; 
    return 0;




сам раб 2(if25)


#include <iostream>
using namespace std;

int main() {
    int x;
    cout << "Enter integer x: ";
    cin >> x;

    int f;
    if (x < -2 || x > 2) {
        f = 2 * x;
    } else {
        f = 3 * x;
    }

    cout << "f(x) = " << f << endl;
    return 0;
}



сам раб 2(if26)


#include <iostream>
#include <cmath>
using namespace std;
double f(double x) {
    if (x <= 0) {
        return -x;
    } else if (x < 2) {
        return pow(x, 2);
    } else {
        return 4;
    }
}
int main() {
    double x;
    cout << "Enter a real number: ";
    cin >> x;
    cout << "f(" << x << ") = " << f(x) << endl;
    return 0;
}



сам работа 3 базовый(5.56в)


#include <iostream>
using namespace std;
int main() {
    int n;
    cout << "Введите количество чисел n: ";
    cin >> n;
    int a[n];
    cout << "Введите " << n << " чисел: ";
    for (int i = 0; i < n; i++) {
        cin >> a[i];
    }
    cout << "Суммы соседних чисел:\n";
    for (int i = 0; i < n-1; i++) {
        cout << a[i] + a[i+1] << " ";
    }
    return 0;
}




сам работа 3 базовый(5.56г)



#include <iostream>
using namespace std;

int main() {
    int n, sum = 0;  
    cout << "Please input n";
    cin >> n;        
    int arr[n];       
    for (int i = 0; i < n; i++) {
        cin >> arr[i];   
        if (i % 2 == 0) {  
            sum += arr[i];
        } else {
            sum -= arr[i];
        }
    }
    cout << sum << endl;  
    return 0;   
}


сам работа 3 базовый(w12)


#include <iostream>
using namespace std;

int main() {
    int N, sum = 0, k = 0;
    cout << "Enter an integer N (>1):";
    cin >> N;

    while (sum <= N) {
        k++;
        sum += k;
    }
    cout << "The largest integer K: " << k-1 << endl;
    cout << "The sum of the numbers from 1 to K: " << sum-k << endl;
    return 0;
}


сам работа 3 продвинутая(12)

НЕТ ЗАДАЧИ В УЧЕБНИКЕ


сам работа 4 базовый(2.16)


#include <iostream>
using namespace std;
int main() {
    float arr[12];
    int i, max_index = 0, min_index = 0, count = 0;
    for (i = 0; i < 12; i++) {
        cout << "Input " << i+1 << "st Element: ";
        cin >> arr[i];
    }
    for (i = 1; i < 12; i++) {
        if (arr[max_index] < arr[i]) {
            max_index = i;
        } else if (arr[min_index] > arr[i]) {
            min_index = i;
        }
    }
    count = abs(max_index - min_index) - 1;
    cout << "Maximum element: " << arr[max_index] << endl;
    cout << "Minimum element: " << arr[min_index] << endl;
    cout << "The number of elements between the maximum and minimum:" << count << endl;
    return 0;
}

сам работа 4 базовый(2.17)



#include <iostream>
using namespace std;
int main() {
    int arr[15], neg_count = 0, zero_count = 0, pos_prod = 1;
    // ввод элементов массива с клавиатуры
    cout << "Enter 15 integers:" << endl;
    for(int i = 0; i < 15; i++) {
        cin >> arr[i];
    }
    // вывод массива на экран
    cout << "Array:";
    for(int i = 0; i < 15; i++) {
        cout << arr[i] << " ";
    }
    cout << endl;
    // подсчет количества отрицательных и нулевых элементов
    for(int i = 0; i < 15; i++) {
        if(arr[i] < 0) {
            neg_count++;
        } else if(arr[i] == 0) {
            zero_count++;
        }
    }
    // вычисление произведения положительных элементов
    for(int i = 0; i < 15; i++) {
        if(arr[i] > 0) {
            pos_prod *= arr[i];
        }
    }
    // вывод результатов на экран
    cout << "The number of negative elements: " << neg_count << endl;
    cout << "Number of zero elements: " << zero_count << endl;
    cout << "The product of positive elements: " << pos_prod << endl;
    return 0;
}


сам работа 4 базовый(2.18)


#include <iostream>
using namespace std;
int main() {
    int arr[12];
    cout << "Insert 12 elements of array: ";
    for(int i=0; i<12; i++) {
        cin >> arr[i];
    }
    int min_val = arr[0], max_val = arr[0]; // Первое значение массива является минимальным и максимальным
    for(int i=1; i<12; i++) { // Проходим по остальным элементам массива
        if(arr[i] < min_val) min_val = arr[i]; // Если значение элемента меньше, чем минимальное значение, то присваиваем его минимальному значению
        if(arr[i] > max_val) max_val = arr[i]; // Если значение элемента больше, чем максимальное значение, то присваиваем его максимальному значению
    }
    cout << "Minimum value: " << min_val << endl;
    cout << "Maximum value: " << max_val << endl;
    return 0;
}


сам работа 4 базовый(2.19)



#include <iostream>
using namespace std;
int main() {
    int arr[19];
    for (int i = 0; i < 19; i++) {
        cout << "Enter element " << i << ": ";
        cin >> arr[i];
    }
    int sum = 0;
    bool negative_found = false;
    for (int i = 0; i < 19; i++) {
        if (arr[i] < 0) {
            negative_found = true;
            break;
        }
        sum += arr[i];
    }
    if (negative_found) {
        cout << "The sum of the elements before the first negative element is: " << sum << endl;
    } else {
        cout << "There are no negative elements in the array" << endl;
    }
    return 0;
}


сам работа 4 продвинутый(12)



#include <iostream>
using namespace std;
int main()
{
    int n;
    double x, result; // используем double, чтобы сохранить точность вычислений
    char answer;
    do {
        cout << "Enter the degree of the polynomial: ";
        cin >> n;
        double A[n+1];
        cout << "Enter the coefficients of the polynomial (starting from the highest):";
        for (int i = n; i >= 0; i--) {
            cin >> A[i];
        }
        cout << "Enter an argument: ";
        cin >> x;
        result = 0;
        for (int i = n; i >= 0; i--) {
            result = result * x + A[i];
        }
        cout << "The value of the polynomial is : " << result << endl;
        cout << "Would you like to continue working? (y/n): ";
        cin >> answer;
    } while (answer == 'y' || answer == 'Y');
    return 0;
}


сам работа 5 продвинутый(11)


#include <iostream>
using namespace std;
// Функция вычисления определителя матрицы
double determinant(double matrix[][2]) {
    return matrix[0][0] * matrix[1][1] - matrix[0][1] * matrix[1][0];
}
int main() {
    double matrix[2][2];
    cout << "Enter the values of the 2x2 matrix:\n";
    for (int i = 0; i < 2; i++) {
        for (int j = 0; j < 2; j++) {
            cin >> matrix[i][j];
        }
    }
    cout << "\n The original matrix:\n";
    for (int i = 0; i < 2; i++) {
        for (int j = 0; j < 2; j++) {
            cout << matrix[i][j] << "\t";
        }
        cout << endl;
    }
    double det = determinant(matrix);
    cout << " Matrix determinant: " << det << endl;
    return 0;
}


// 1 урок баз.  IN27
IN27 
#include <iostream>
using namespace std;

int main() {
    int k;
    cout << "Введите номер дня года (1-365): ";
    cin >> k;
    int dayOfWeek = (k + 5) % 7 + 1;
    cout << "Номер дня недели: " << dayOfWeek << endl;
    return 0;
}



// 3 урок баз. 5.67(в)
#include <iostream>
using namespace std;

int main() {
    int n;
    cout << "Введите число n: ";
    cin >> n;

    int f1 = 1, f2 = 1, sum = 2;
    for (int i = 3; i <= n; i++) {
        int f = f1 + f2;
        sum += f;
        f1 = f2;
        f2 = f;
    }

    if (sum % 2 == 0) {
        cout << "Сумма первых " << n << " членов последовательности Фибоначчи является четным числом.";
    } else {
        cout << "Сумма первых " << n << " членов последовательности Фибоначчи не является четным числом.";
    }

    return 0;
}

// 3 урок баз. 5.68(а,б,в)

а) Решение:

int k;
cout << "Введите номер члена k: ";
cin >> k;

int numerator1 = 1, denominator1 = 1;
int numerator2 = 2, denominator2 = 1;
int numerator_k, denominator_k;

if (k == 1) {
    numerator_k = numerator1;
    denominator_k = denominator1;
} else if (k == 2) {
    numerator_k = numerator2;
    denominator_k = denominator2;
} else {
    for (int i = 3; i <= k; i++) {
        numerator_k = numerator1 + numerator2;
        denominator_k = denominator1 + denominator2;
        numerator1 = numerator2;
        denominator1 = denominator2;
        numerator2 = numerator_k;
        denominator2 = denominator_k;
    }
}

cout << "k-й член последовательности: " << numerator_k << "/" << denominator_k << endl;

б) Решение:

int n;
cout << "Введите количество членов n: ";
cin >> n;

int numerator1 = 1, denominator1 = 1;
int numerator2 = 2, denominator2 = 1;
int numerator, denominator;

cout << "Первые " << n << " членов последовательности:" << endl;

cout << numerator1 << "/" << denominator1 << endl;
if (n >= 2) {
    cout << numerator2 << "/" << denominator2 << endl;
}
for (int i = 3; i <= n; i++) {
    numerator = numerator1 + numerator2;
    denominator = denominator1 + denominator2;
    cout << numerator << "/" << denominator << endl;
    numerator1 = numerator2;
    denominator1 = denominator2;
    numerator2 = numerator;
    denominator2 = denominator;
}

в) Решение:

int A;
cout << "Введите число A: ";
cin >> A;

int numerator1 = 1, denominator1 = 1;
int numerator2 = 2, denominator2 = 1;
int numerator, denominator, sum = 3;

for (int i = 3; i <= n; i++) {
    numerator = numerator1 + numerator2;
    denominator = denominator1 + denominator2;
    sum += numerator;
    numerator1 = numerator2;
    denominator1 = denominator2;
    numerator2 = numerator;
    denominator2 = denominator;
}

if (sum > A) {
    cout << "Сумма первых " << n << " членов последовательности больше числа A.";
} else {
    cout << "Сумма первых " << n << " членов последовательности не больше числа A.";
}

 // 3 урок баз. 5.69
#include <iostream>

using namespace std;

int main() {
    int n;
    double v1 = 0, v2 = 0, v3 = 1.5, vn;

    cout << "Введите n: ";
    cin >> n;

    for (int i = 4; i <= n; i++) {
        vn = 3 * v3 - 2 * v2 + 2 * v1;
        v1 = v2;
        v2 = v3;
        v3 = vn;
    }

    cout << "V" << n << " = " << vn << endl;

    return 0;
}
 // 3 урок баз. 5.70 
#include <iostream>
using namespace std;

int main() {
    int amoeba = 1; // начальное количество амеб
    for (int i = 3; i <= 24; i += 3) { // цикл от 3 до 24 с шагом 3
        amoeba *= 2; // увеличиваем количество амеб вдвое
        cout << "Через " << i << " часов будет " << amoeba << " амеб" << endl;
    }
    return 0;
}

 // 3 урок баз. 5.71
#include <iostream>
using namespace std;

int main() {
    double deposit = 1000; // начальная сумма вклада
    double interest = 0.02; // процентная ставка
    for (int i = 1; i <= 10; i++) { // цикл от 1 до 10
        double growth = deposit * interest; // прирост суммы вклада
        deposit += growth; // увеличиваем сумму вклада на прирост
        cout << "Прирост суммы вклада за " << i << " месяц: " << growth << " руб." << endl;
    }
    for (int i = 3; i <= 12; i++) { // цикл от 3 до 12
        deposit *= (1 + interest); // увеличиваем сумму вклада на процентную ставку
        cout << "Сумма вклада через " << i << " месяц: " << deposit << " руб." << endl;
    }
    return 0;
}

 // 3 урок баз. 5.72

#include <iostream>
using namespace std;

int main() {
    double distance = 10; // начальный пробег
    for (int i = 2; i <= 10; i++) { // цикл от 2 до 10
        distance *= 1.1; // увеличиваем пробег на 10%
        cout << "Пробег за " << i << " день: " << distance << " км" << endl;
    }
    return 0;
}

 // 3 урок баз. W9 
#include <iostream>
#include <cmath> // для использования функции pow()
using namespace std;

int main() {
    int N, K = 1; // инициализируем K = 1
    cout << "Введите целое число N (> 1): ";
    cin >> N;
    while (pow(3, K) <= N) { // пока выполняется неравенство
        K++; // увеличиваем K на 1
    }
    cout << "Наименьшее целое число K, при котором 3^K > N: " << K << endl;
    return 0;
}
 

 

  // 4 урок баз. 2.28
#include <iostream>
using namespace std;

int main() {
    int arr[17];
    int sum = 0, count = 0, pos_sum = 0, pos_count = 0;
    double avg_pos;

    // заполнение массива и подсчет суммы и количества положительных элементов
    for (int i = 0; i < 17; i++) {
        cout << "Введите элемент массива: ";
        cin >> arr[i];
        if (arr[i] > 0) {
            pos_sum += arr[i];
            pos_count++;
        }
    }

    // вычисление среднего арифметического положительных элементов
    avg_pos = (double)pos_sum / pos_count;

    // подсчет суммы и количества элементов, абсолютное значение которых больше среднего арифметического положительных элементов
    for (int i = 0; i < 17; i++) {
        if (abs(arr[i]) > avg_pos) {
            sum += arr[i];
            count++;
        }
    }

    cout << "Сумма элементов, абсолютное значение которых больше среднего арифметического положительных элементов: " << sum << endl;
    cout << "Количество таких элементов: " << count << endl;

    return 0;
}

 // 4 урок баз. 2.29
#include <iostream>
using namespace std;

int main() {
    double arr[18];
    double prod_pos = 1, sum_neg = 0, result;

    // заполнение массива и подсчет произведения положительных элементов и суммы модулей отрицательных элементов
    for (int i = 0; i < 18; i++) {
        cout << "Введите элемент массива: ";
        cin >> arr[i];
        if (arr[i] > 0) {
            prod_pos *= arr[i];
        } else if (arr[i] < 0) {
            sum_neg += abs(arr[i]);
        }
    }

    // проверка деления на ноль и вычисление результата
    if (sum_neg == 0) {
        cout << "Деление на ноль невозможно." << endl;
    } else {
        result = prod_pos / sum_neg;
        cout << "Результат: " << result << endl;
    }

    return 0;
}

  // 4 урок баз. 3.1
#include <iostream>
#include <algorithm> // для функции sort
using namespace std;

int main() {
    int arr[3][4] = {{3, 2, 1, 4}, {8, 6, 7, 5}, {11, 10, 12, 9}};

    // сортировка последней строки
    sort(arr[2], arr[2] + 4);

    // вывод отсортированного массива
    for (int i = 0; i < 3; i++) {
        for (int j = 0; j < 4; j++) {
            cout << arr[i][j] << " ";
        }
        cout << endl;
    }

    return 0;
}

  // 4 урок баз. 3.2
#include <iostream>
using namespace std;

int main() {
    int arr[7][7] = {{1, -2, 3, 4, -5, 6, 7},
                     {8, -9, 10, -11, 12, 13, 14},
                     {15, 16, -17, 18, 19, -20, 21},
                     {22, -23, 24, 25, 26, -27, 28},
                     {29, 30, -31, 32, -33, 34, 35},
                     {-36, 37, 38, -39, 40, 41, -42},
                     {43, -44, 45, 46, 47, -48, 49}};

    int sum = 0;
    for (int i = 0; i < 7; i++) {
        for (int j = 0; j < 7; j++) {
            if (arr[i][j] < 0 && arr[i][j] % 2 != 0) {
                sum += abs(arr[i][j]); // abs() функция для нахождения модуля числа
            }
        }
    }

    cout << "Сумма модулей отрицательных нечетных элементов: " << sum << endl;

    return 0;
}
 

   // 4 урок прод. задание 15
#include <iostream>
using namespace std;

int main() {
    int n; // степень полинома
    cout << "Введите степень полинома: ";
    cin >> n;

    int coef[n+1]; // массив коэффициентов полинома
    for (int i = 0; i <= n; i++) {
        cout << "Введите коэффициент при x^" << i << ": ";
        cin >> coef[i];
    }

    char choice; // переменная для выбора продолжения работы
    do {
        int x; // аргумент
        cout << "Введите значение аргумента: ";
        cin >> x;

        int derivative = 0; // значение производной полинома
        for (int i = 1; i <= n; i++) {
            derivative += i * coef[i] * pow(x, i-1); // вычисление слагаемых производной
        }

        cout << "Значение производной полинома в точке " << x << ": " << derivative << endl;

        cout << "Продолжить работу? (y/n): ";
        cin >> choice;
    } while (choice == 'y' || choice == 'Y');

    return 0;
}


  // 5 урок прод. задание 14 
#include <iostream>
using namespace std;

// функция для вычисления значения полинома
int polynomial(int coef[], int n, int x) {
    int result = 0;
    for (int i = 0; i <= n; i++) {
        result += coef[i] * pow(x, i);
    }
    return result;
}

int main() {
    int n; // степень полинома
    cout << "Введите степень полинома: ";
    cin >> n;

    int coef[n+1]; // массив коэффициентов полинома
    for (int i = 0; i <= n; i++) {
        cout << "Введите коэффициент при x^" << i << ": ";
        cin >> coef[i];
    }

    char choice; // переменная для выбора продолжения работы
    do {
        int x; // аргумент
        cout << "Введите значение аргумента: ";
        cin >> x;

        int value = polynomial(coef, n, x); // вычисление значения полинома

        cout << "Значение полинома в точке " << x << ": " << value << endl;

        cout << "Продолжить работу? (y/n): ";
        cin >> choice;
    } while (choice == 'y' || choice == 'Y');

    return 0;
}
