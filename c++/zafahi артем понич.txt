//самостоятельная базовая 1, №4
#include <iostream>
#include <cmath>  // библиотека для математических функций
using namespace std;

int main() {
    const double g = 9.81; // ускорение свободного падения
    double H, V, a, t; // переменные для высоты обрыва, начальной скорости, угла, времени
    double T, x, y; // переменные для времени полета, высоты от дна обрыва и расстояния до края обрыва
    
    cout << "Введите высоту обрыва (м): ";
    cin >> H;
    
    cout << "Введите начальную скорость камня (м/с): ";
    cin >> V;
    
    cout << "Введите угол броска (в градусах): ";
    cin >> a;
    a = a * M_PI / 180; // переводим градусы в радианы
    
    cout << "Введите время полета камня (с): ";
    cin >> t;
    
    T = V * sin(a) / g * (1 + sqrt(1 + 2 * g * H / pow(V * sin(a), 2))); // вычисляем время полета камня
    x = V * t * cos(a); // вычисляем высоту от дна обрыва
    y = H + V * t * sin(a) - g * pow(t, 2) / 2; // вычисляем расстояние до края обрыва
    
    // проверяем, упал ли камень на дно обрыва, и выводим результат
    (t > T) ? cout << "Камень упал на дно обрыва" << endl : cout << "Высота от дна обрыва: " << x << " м" << endl;
    cout << "Расстояние до края обрыва: " << y << " м" << endl;
    
    return 0;
}

//самостоятельная базовая 3, №Ф6

#include <iostream> // подключаем библиотеку для работы с вводом/выводом

int main() { // начало программы
    float price; // объявляем переменную для хранения цены на 1 кг конфет
    std::cout << "Enter the price per kilogram of candy: "; // выводим приглашение на ввод цены
    std::cin >> price; // считываем цену с клавиатуры
    for (float kilos = 1.2; kilos <= 2.0; kilos += 0.2) { // запускаем цикл от 1.2 до 2.0 с шагом 0.2
        float cost = kilos * price; // находим стоимость нужного количества конфет
        std::cout << "Cost of " << kilos << " kg of candy: " << cost << std::endl; // выводим результат
    }
    return 0; // завершаем программу
}

//самостоятельная базовая 3, №Ф7
#include <iostream> // подключаем библиотеку для работы с вводом/выводом

int main() { // начало программы
    int A, B; // объявляем переменные для хранения А и В
    std::cout << "Enter two integers A and B (A < B): "; // выводим приглашение на ввод А и В
    std::cin >> A >> B; // считываем числа с клавиатуры
    int sum = 0; // объявляем переменную для хранения суммы всех чисел от А до В
    for (int i = A; i <= B; i++) { // запускаем цикл от А до В включительно
        sum += i; // прибавляем текущее число к сумме
    }
    std::cout << "The sum of all integers from " << A << " to " << B << " is " << sum << std::endl; // выводим результат
    return 0; // завершаем программу
}
//самостоятельная базовая 3, №Ф8
#include <iostream>

int main() {
    int a, b;
    long long product = 1;
    std::cout << "Enter two integers (A < B): ";
    std::cin >> a >> b;
    for(int i = a; i <= b; i++) {
        product *= i;
    }
    std::cout << "Product of all integers from A to B inclusive is: " << product << std::endl;
    return 0;
}
//самостоятельная базовая 3, №Ф9
#include <iostream>

int main() {
    int a, b;
    long long sum = 0;
    std::cout << "Enter two integers (A < B): ";
    std::cin >> a >> b;
    for(int i = a; i <= b; i++) {
        sum += i * i;
    }
    std::cout << "Sum of squares of all integers from A to B inclusive is: " << sum << std::endl;
    return 0;
}
//самостоятельная базовая 3, №Ф10
#include <iostream>

int main() {
    int N;
    double sum = 0;
    std::cout << "Enter an integer N: ";
    std::cin >> N;
    for(int i = 1; i <= N; i++) {
        sum += 1.0 / i;
    }
    std::cout << "Sum of 1 + 1/2 + 1/3 + ... + 1/N is: " << sum << std::endl;
    return 0;
}
//самостоятельная базовая 3, №Ф11
#include <iostream>

int main() {
    int N;
    long long sum = 0;
    std::cout << "Enter an integer N: ";
    std::cin >> N;
    for(int i = N; i <= 2 * N; i++) {
        sum += i * i;
    }
    std::cout << "Sum of N^2 + (N+1)^2 + (N+2)^2 + ... + (2N)^2 is: " << sum << std::endl;
    return 0;
}
//самостоятельная базовая 3, №Ф12
#include <iostream>

int main() {
    int N;
    double product = 1.1;
    std::cout << "Enter an integer N: ";
    std::cin >> N;
    for(int i = 2; i <= N; i++) {
        product *= 1.0 + (i - 1) / 10.0;
    }
    std::cout << "Product of 1.1 * 1.2 * 1.3 * ... * (N+1)/10 is: " << product << std::endl;
    return 0;
}
//самостоятельная базовая 3, №Ф13
#include <iostream>

int main() {
    int N;
    double value = 1.1;
    int sign_multiplier = 1;
    std::cout << "Enter an integer N: ";
    std::cin >> N;
    for(int i = 2; i <= N; i++) {
        value += sign_multiplier * 0.1 * i;
        sign_multiplier *= -1;
    }
    std::cout << "Value of 1.1 - 1.2 + 1.3 - ... + (-1)^N * (N+1)/10 is: " << value << std::endl;
    return 0;
}
//самостоятельная базовая 3, №Ф14
#include <iostream>
using namespace std;

int main() {
    int N; // объявляем переменную для хранения вводимого значения N
    cout << "Введите целое число N: ";
    cin >> N; // вводим N с клавиатуры
    int sum = 0; // объявляем переменную для хранения суммы
    for (int i = 1; i <= 2*N-1; i += 2) { // проводим цикл от 1 до 2N-1, увеличивая i на 2
        sum += i; // добавляем к сумме текущее значение i
        cout << "Текущее значение суммы: " << sum << endl; // выводим текущее значение суммы
    }
    cout << "Квадрат числа " << N << " равен " << sum << endl; // выводим окончательный результат
    return 0;
}
//самостоятельная базовая 3, №W3
#include <iostream>
using namespace std;

int main() {
    int N, K; // объявляем переменные для хранения вводимых значений N и K
    cout << "Введите целое положительное число N: ";
    cin >> N;
    cout << "Введите целое положительное число K: ";
    cin >> K; // вводим N и K с клавиатуры
    int quotient = 0, remainder = N; // инициализируем переменные, хранящие частное и остаток
    while (remainder >= K) { // пока остаток больше или равен K
        remainder -= K; // вычитаем K из остатка
        quotient++; // увеличиваем частное на 1
    }
    cout << "Частное от деления " << N << " на " << K << " равно " << quotient << endl; // выводим частное
    cout << "Остаток от деления " << N << " на " << K << " равен " << remainder << endl; // выводим остаток
    return 0;
}
//самостоятельная базовая 3, №W28
#include <iostream>
#include <cmath>
using namespace std;

int main() {
    double E; // объявляем переменную для хранения вводимого значения E
    cout << "Введите вещественное число E: ";
    cin >> E; // вводим E с клавиатуры
    double a1 = 2.0, a2 = 2.0 + 1.0/a1; // инициализируем первые два элемента последовательности
    int k = 2; // инициализируем номер текущего элемента
    while (abs(a2 - a1) >= E) { // пока модуль разности двух последовательных элементов больше либо равен E
        k++; // увеличиваем номер текущего элемента на 1
        a1 = a2; // присваиваем a1 значение a2 (текущий элемент становится предыдущим)
        a2 = 2.0 + 1.0/a1; // вычисляем новое значение a2 (текущий элемент)
    }
    cout << "Первый номер K, для которого выполняется условие |Ak - Ak-1| < E, равен " << k << endl; // выводим номер K
    cout << "Значение Ak-1 равно " << a1 << endl; // выводим Ak-1
    cout << "Значение Ak равно " << a2 << endl; // выводим Ak
    return 0;
}
//самостоятельная базовая 4, №3.23
#include <iostream>
using namespace std;

int main() {
    const int n = 4, m = 5; // объявляем размеры матрицы
    int a[n][m]; // объявляем матрицу
    cout << "Введите элементы матрицы " << n << "x" << m << ":" << endl;
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            cin >> a[i][j]; // вводим элементы матрицы с клавиатуры
        }
    }
    int sum = 0; // объявляем переменную для хранения суммы элементов матрицы
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            sum += a[i][j]; // добавляем к сумме текущий элемент матрицы
        }
    }
    double average = static_cast<double>(sum) / (n * m); // вычисляем среднее арифметическое
    int count = 0; // объявляем переменную для хранения количества элементов, превосходящих среднее арифметическое
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            if (a[i][j] > average) { // если текущий элемент матрицы превосходит среднее арифметическое
                
count++; // увеличиваем счетчик на 1
            }
        }
    }
    cout << "Количество элементов матрицы, превосходящих среднее арифметическое, равно " << count << endl; // выводим результат
    return 0;
}
//самостоятельная базовая 4, №3.24
#include <iostream>
using namespace std;

int main() {
    const int n = 3, v = 5; // объявляем размеры массива
    int arr[n][v]; // объявляем массив
    cout << "Введите элементы массива " << n << "x" << v << ":" << endl;
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < v; j++) {
            cin >> arr[i][j]; // вводим элементы массива с клавиатуры
        }
    }
    int sum = 0; // объявляем переменную для хранения суммы элементов второй строки массива
    for (int j = 0; j < v; j++) {
        sum += arr[1][j]; // добавляем к сумме текущий элемент второй строки массива
    }
    cout << "Сумма элементов второй строки массива равна " << sum << endl; // выводим результат
    return 0;
}
//самостоятельная базовая 4, №3.25
#include <iostream>
using namespace std;

int main() {
    const int n = 4, m = 4; // объявляем размеры матрицы
    int a[n][m]; // объявляем матрицу
    cout << "Введите элементы матрицы " << n << "x" << m << ":" << endl;
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            cin >> a[i][j]; // вводим элементы матрицы с клавиатуры
        }
    }
    int count = 0; // объявляем переменную для хранения количества отрицательных элементов во втором столбце матрицы
    for (int i = 0; i < n; i++) {
        if (a[i][1] < 0) { // если текущий элемент находится во втором столбце и является отрицательным
            count++; // увеличиваем счетчик на 1
        }
    }
    cout << "Количество отрицательных элементов во втором столбце матрицы равно " << count << endl; // выводим результат
    return 0;
}
//самостоятельная базовая 4, №3.26
#include <iostream>
using namespace std;

int main() {
    int rows, cols; // объявляем переменные для хранения количества строк и столбцов
    cout << "Введите количество строк матрицы: ";
    cin >> rows;
    cout << "Введите количество столбцов матрицы: ";
    cin >> cols;
    int a[rows][cols]; // создаем матрицу нужного размера
    cout << "Введите элементы матрицы " << rows << "x" << cols << ":" << endl;
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            cin >> a[i][j]; // вводим элементы матрицы с клавиатуры
        }
    }
    int count[cols] = {0}; // создаем массив для хранения количества элементов в каждом столбце и заполняем его нулями
    for (int j = 0; j < cols; j++) {
        for (int i = 0; i < rows; i++) {
            if (a[i][j] == 7) { // если текущий элемент равен 7
                count[j]++; // увеличиваем количество элементов в соответствующем столбце на 1
            }
        }
    }
    for (int j = 0; j < cols; j++) {
        cout << "Количество элементов в " << j+1 << "-м столбце матрицы, равных 7, равно " << count[j] << endl; // выводим результат
    }
    return 0;
}
//самостоятельная базовая 5, №189
#include <iostream>
#include <cmath>

using namespace std;

double power(double a, double b) {
    return pow(a, b);
}

int main() {
    double a, b;
    cout << "Enter the base (a): ";
    cin >> a;
    cout << "Enter the exponent (b): ";
    cin >> b;
    cout << a << "^" << b << " = " << power(a, b) << endl;
    return 0;
}
//самостоятельная продвинутая 5, №18
#include <iostream>
#include <cmath>

using namespace std;

double f(double x, double coeffs[], int n) {
    double res = 0.0;
    for (int i = 0; i <= n; i++) {
        res += coeffs[i] * pow(x, i);
    }
    return res;
}

double root(double a, double b, double coeffs[], int n, double eps) {
    double c;
    while (fabs(b - a) > eps && f(a, coeffs, n) * f(b, coeffs, n) <= 0) {
        c = a - (f(a, coeffs, n) * (b - a)) / (f(b, coeffs, n) - f(a, coeffs, n));
        if (f(c, coeffs, n) * f(a, coeffs, n) < 0) {
            b = c;
        } else {
            a = c;
        }
    }
    return c;
}

int main() {
    int n;
    double a, b, eps;
    cout << "Enter the number of coefficients: ";
    cin >> n;
    double coeffs[n+1];
    for (int i = 0; i <= n; i++) {
        cout << "Enter coefficient a" << i << ": ";
        cin >> coeffs[i];
    }
    cout << "Enter the interval [a, b]:\n";
    cout << "a: ";
    cin >> a;
    cout << "b: ";
    cin >> b;
    cout << "Enter the error tolerance (eps): ";
    cin >> eps;
    cout << "The root of the equation f(x) = 0 is: " << root(a, b, coeffs, n, eps) << endl;
    return 0;
}