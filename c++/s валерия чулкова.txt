//Самостоятельная работа 1 базовый уровень, integer 28

#include <iostream>
using namespace std;

int main() {
int k, n;
cout << "Enter the day of the year (1-365): ";
cin >> k;
cout << "Enter the day of the week for January 1st (1-7): ";
cin >> n;

int dayOfWeek = ((k - 1) + (n - 1)) % 7 + 1;
cout << "The day of the week for day " << k << " is " << dayOfWeek << endl;

return 0;
}


//Самостоятельная работа 3 базовый вариант
//№ 5.72 (б)

#include <iostream>
using namespace std;

int main() {
double distance = 10; // initial distance
double totalDistance = 10; // total distance for the first day
for (int i = 2; i <= 7; i++) {
distance *= 1.1; // increase distance by 10%
totalDistance += distance; // add distance to total distance
}
cout<< "The total distance covered in the first 7 days is "<< totalDistance<< " km."<< endl;
return 0;
}


//Самостоятельная работа 3 базовый вариант
//№ 5.73 (а)
#include <iostream>
#include <cmath>

using namespace std;

int main() {
	double area = 100.0;
	double yield = 20.0;
	double increase_area = 1.05;
	double increase_yield = 1.02;
	
	
	for (int i = 2; i <= 8; i++) {
		area *= (increase_area);
		yield *= (increase_yield);
		double total_yield = yield * area;
		cout << "Year " << i << " yield: " << total_yield << " centners" << endl;
	}
	
	return 0;
}


//Самостоятельная работа 3 базовый вариант
//№ 5.73 (б)
#include <iostream>
#include <cmath>
using namespace std;

int main() {
	double area = 100; // initial area
	double yield = 20; // initial yield
	for (int i = 1; i <= 7; i++) {
		area *= 1.05; // increase area by 5%
		yield *= 1.02; // increase yield by 2%
		if (i >= 4) { // output results for years 4 to 7
			cout << "Year " << i << ": Area = " << round(area) << " hectares, Yield = " << round(yield) << " centners/hectare" << endl;
		}
	}
	return 0;
}


//Самостоятельная работа 3 базовый вариант
//№ 5.73 (в)
#include <iostream>
#include <cmath>

using namespace std;

int main() {
	double area = 100.0;
	double yield = 20.0;
	double increase_area = 1.05;
	double increase_yield = 1.02;
	double total_for_6_year = 2000;
	
	for (int i = 2; i <= 6; i++) {
		area *= (increase_area);
		yield *= (increase_yield);
		double total_yield = yield * area;
		total_for_6_year += total_yield;
	}
	cout << "Yield for 6 years: " << total_for_6_year << endl;
	return 0;
}


//Самостоятельная работа 3 базовый вариант
// № 5.74
#include <iostream>
#include <cmath>

using namespace std;

int main() {
	const double pi = 3.14159265358979323846;
	const double thickness = 0.5;                      
	const double inner_radius = 5.0;                                
	const int num_spheres = 12;                 
	
	double total_volume = 0.0;
	double radius = inner_radius;
	
	for (int i = 0; i < num_spheres; i++) {
		double volume = (4.0 / 3.0) * pi * pow(radius, 3);
		total_volume += volume;
		radius += thickness;
		}
	
	double total_volume_liters = total_volume / 1000.0;                    
	
	cout << "Total volume of " << num_spheres << " spheres: " << total_volume_liters << " liters" << endl;
	
	return 0;
}


//Самостоятельная работа 3 базовый вариант
// 5.75
#include <iostream>
int main(){
	int a = 2;
	int sum = 0;
	for(int i = 1; i < 10; i++){
		a *= 2;
		sum += a;
	}
	std::cout << sum;
}


//Самостоятельная работа 3 базовый вариант
//№ 5.76
#include <iostream>

int main(){
	int a;
	std::cout << "Enter a: ";
	std::cin >> a;
	int a_n = a;
	int n;
	std::cout << "Enter n: ";
	std::cin >> n;
	if (n <= 1){
		std::cout << "Error";
		return 0;
	}
	std::cout << a << " in 1 = " << a_n << std::endl;
	for(int i = 2; i <= n; i++){ 
		a_n *= a;
		std::cout << a << " in " << i << " = " << a_n << std::endl;	
	}
	return(0);
}


//Самостоятельная работа 3 базовый вариант
//№ 5.86
#include <iostream>

using namespace std;

int main() {
	int n;
	cout << "Enter a natural number: ";
	cin >> n;
	
	int sum = 0;
	for (int i = 1; i <= 2 * n - 1; i += 2) {
		sum += i;
		}
	
	cout << "The square of " << n << " is " << sum << endl;

return 0;
}


//Самостоятельная работа 3 базовый вариант
//№ 5.87
#include <iostream>

using namespace std;

int main() {
	int n = 10; 
	int sum = 0;
	
	for (int i = 1; i <= n; i++) {
		int term = 0; 
		for (int j = 1; j <= 2 * i - 1; j += 2) {
			term += j; 
		}
		sum += term;
	}
	
	cout << "The sum of squares from 1 to " << n << " is " << sum << endl;

	return 0;
}


//Самостоятельная работа 3 базовый вариант
//W8
#include <iostream>

int main() {
	int n;
	std::cout << "Enter a positive integer: ";
	std::cin >> n;
	
	int k = 0;
	while (k * k <= n) {
		k++;
	}
	k--;
	
	std::cout << "The largest integer K such that K^2 <= N is: " << k << std::endl;

	return 0;
}


//Самостоятельная работа 4 базовый вариант
//№ 3.3
#include <iostream>
using namespace std;

int main() {
	int arr[5][6] = {{1, -2, 3, -4, 5, -6},
	{7, -8, 9, -10, 11, -12},
	{13, -14, 15, -16, 17, -18},
	{19, -20, 21, -22, 23, -24},
	{25, -26, 27, -28, 29, -30}};
	double mean[6] = {0}; // array to store mean of each column
	int count[6] = {0}; // array to store count of positive elements in each column
	
	// loop through each column
	for (int j = 0; j < 6; j++) {
	// loop through each row in the column
	for (int i = 0; i < 5; i++) {
		if (arr[i][j] > 0) {
			mean[j] += arr[i][j];
			count[j]++;
		}
	}
		if (count[j] > 0) {
		mean[j] /= count[j];
		}
	}
		
		// print the mean of each column
		for (int j = 0; j < 6; j++) {
		cout << "Mean of column " << j+1 << ": " << mean[j] << endl;
		}

return 0;
}


//Самостоятельная работа 4 базовый вариант
//№ 3.4
#include <iostream>
using namespace std;

int main() {
	const int n = 5;
	double a[n][n] = {{1, 2, 3, 4, 5},
	{6, 7, 8, 9, 10},
	{11, 12, 13, 14, 15},
	{16, 17, 18, 19, 20},
	{21, 22, 23, 24, 25}};
	double min = a[0][n-1]; // initialize min with the first element on the secondary diagonal
	for (int i = 1; i < n; i++) {
		if (a[i][n-i-1] < min) {
		min = a[i][n-i-1];
		}
	}
cout << "The smallest element on the secondary diagonal is " << min << endl;
return 0;
}


//Самостоятельная работа 4 базовый вариант
//№ 3.5


//Самостоятельная работа 4 базовый вариант
//№ 3.6
#include <iostream>
using namespace std;

int main() {
	const int ROWS = 4;
	const int COLS = 3;
	int A[ROWS][COLS] = {{8, 7, 3}, {4, 5, 6}, {7, 5, 9}, {1, 5, 9}};
	
	cout << "Array befor sorted: " << endl;
	for (int i = 0; i < ROWS; i++ ) {
		for(int j = 0; j < COLS; j++){
			cout << A[i][j] << " ";
		}
		cout << endl;
	}
	
	int maxIndex1 = 0;
	int maxIndex3 = 0;
	for (int i = 1; i < ROWS; i++) {
		if (A[i][0] > A[maxIndex1][0]) {
			maxIndex1 = i;
		}
		if (A[i][2] > A[maxIndex3][2]) {
			maxIndex3 = i;
		}
	}
	
	int temp = A[maxIndex1][0];
	A[maxIndex1][0] = A[maxIndex3][2];
	A[maxIndex3][2] = temp;
	
	cout << "Array after sorted: " << endl;
	for (int i = 0; i < ROWS; i++) {
		for (int j = 0; j < COLS; j++) {
			cout << A[i][j] << " ";
		}
		cout << endl;
	}
	
	return 0;
}


//Самостоятельная работа 4 продвинутый вариант
//№ 16


//Самостоятельная работа 5 продвинутый вариант
//№ 15
#include <iostream>
#include <math.h>
using namespace std;


double derivative(double coeffs[], int n, double x) {
	double result = 0;
	for (int i = 1; i < n; i++) {
		result += i * coeffs[i] * pow(x, i-1);
	}
	return result;
}

int main() {
	int n;
	cout << "Enter the degree of the polynomial: ";
	cin >> n;
	
	double coeffs[n];
	cout << "Enter the coefficients of the polynomial: ";
	for (int i = 0; i < n; i++) {
		cin >> coeffs[i];
	}
	
	double x;
	cout << "Enter the value of x for which to compute the derivative: ";
	cin >> x;
	
	double result = derivative(coeffs, n, x);
	cout << "The value of the derivative at x = " << x << " is " << result << endl;
	
	return 0;
}

